module.exports = function (grunt) {

    //grunt.loadNpmTasks('Nome do pacote a ser configurado vai aqui')
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'), 

        *** ***
        less: { 
            development: {files: { 'arquivo-destino-dev/arquivo.css': 'arquivo-origem/arquivo.less'}}, 
            production: { options: { compress: true }, files: { 'arquivo-destino-dist/arquivo.css': 'arquivo-origem/arquivo.less' } }
        },

        *** ***
        sass: { dist: {options: {style: 'compressed' },files: {'arquivo-destino/arquivo.css': 'arquivo-origem/arquivo.scss'} }
        },

        *** ***
        concurrent: { target: ['NomeDasFuncoes', 'QueVaoSer', 'Executadas', 'DeManeiraAssincrona'] },

        *** ***
        watch: { 
            less: { files: ['src/styles/**/*.less'], tasks: ['less:development'] },
            html: { files: ['src/index.html'], tasks: ['replace:dev'] }
        },

        *** ***
        replace: { 
            dev: {  
                options: { patterns: [{match: 'ENDERECO_DO_CSS',  replacement: './styles/main.css'}, { match: 'ENDERECO_DO_JS', replacement: './src/scripts/main.css' }]},
                files: [{ expand: true, flatten: true, src: ['src/index.html'], dest: 'dev/' }] },
            dist: {
                options: { patterns: [{match: 'ENDERECO_DO_CSS',replacement: './styles/main.min.css'},{match: 'ENDERECO_DO_JS',replacement: './scripts/main.min.js'}]},
                files: [{expand: true,flatten: true,src: ['prebuild/index.html'],est: 'dist/'}] }
        },

        *** ***
        htmlmin: {
            dist: {options: {removeComments: true,collpaseWhitespace: true},
            files: {'prebuild/index.html': 'src/index.html'}}
        },

        *** ***
        clean: ['prebuild'],

        *** ***
        uglify:{target:{files:{'dist/scripts/main.min.js':'src/scripts/main.js'}}}
    })







    grunt.registerTask('default', ['watch'])
    grunt.registerTask('build', ['less:production', 'htmlmin:dist', 'replace:dist', 'clean', 'uglify'])
}